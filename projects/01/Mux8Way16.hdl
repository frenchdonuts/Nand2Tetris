// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=Notsel0);
    Not(in=sel[1], out=Notsel1);
    Not(in=sel[2], out=Notsel2);

    And(a=Notsel2, b=Notsel1, out=Notsel2AndNotsel1);
    And(a=Notsel2AndNotsel1, b=sel[0], out=Notsel2AndNotsel1Andsel0);

    And(a=Notsel2, b=sel[1], out=Notsel2Andsel1);
    And(a=Notsel2Andsel1, b=Notsel0, out=Notsel2Andsel1AndNotsel0);

    //And(a=Notsel2, b=sel[1], out=Notsel2Andsel1);
    And(a=Notsel2Andsel1, b=sel[0], out=Notsel2Andsel1Andsel0);

    And(a=sel[2], b=Notsel1, out=sel2AndNotsel1);
    And(a=sel2AndNotsel1, b=Notsel0, out=sel2AndNotsel1AndNotsel0);

    //And(a=sel[2], b=Notsel1, out=sel2AndNotsel1);
    And(a=sel2AndNotsel1, b=sel[0], out=sel2AndNotsel1Andsel0);

    And(a=sel[2], b=sel[1], out=sel2Andsel1);
    And(a=sel2Andsel1, b=Notsel0, out=sel2Andsel1AndNotsel0);

    //And(a=sel[2], b=sel[1], out=sel2Andsel1);
    And(a=sel2Andsel1, b=sel[0], out=sel2Andsel1Andsel0);

    Mux16(a=a, b=b, sel=Notsel2AndNotsel1Andsel0, out=mout1);
    Mux16(a=mout1, b=c, sel=Notsel2Andsel1AndNotsel0, out=mout2);
    Mux16(a=mout2, b=d, sel=Notsel2Andsel1Andsel0, out=mout3);
    Mux16(a=mout3, b=e, sel=sel2AndNotsel1AndNotsel0, out=mout4);
    Mux16(a=mout4, b=f, sel=sel2AndNotsel1Andsel0, out=mout5);
    Mux16(a=mout5, b=g, sel=sel2Andsel1AndNotsel0, out=mout6);
    Mux16(a=mout6, b=h, sel=sel2Andsel1Andsel0, out=out);
}